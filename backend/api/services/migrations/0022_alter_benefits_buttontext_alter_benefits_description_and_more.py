# Generated by Django 4.1.3 on 2023-03-19 19:32

import api.customs
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("services", "0021_alter_benefits_description"),
    ]

    operations = [
        migrations.AlterField(
            model_name="benefits",
            name="buttonText",
            field=api.customs.CustomCharField(
                help_text="Help Text Placeholder",
                max_length=40,
                verbose_name="Button Text",
            ),
        ),
        migrations.AlterField(
            model_name="benefits",
            name="description",
            field=api.customs.CustomTextField(
                help_text="Help Text Placeholder",
                max_length=250,
                verbose_name="Description",
            ),
        ),
        migrations.AlterField(
            model_name="benefits",
            name="icon",
            field=api.customs.CustomCharField(
                help_text="Help Text Placeholder", max_length=40, verbose_name="Icon"
            ),
        ),
        migrations.AlterField(
            model_name="benefits",
            name="title",
            field=api.customs.CustomCharField(
                help_text="Help Text Placeholder", max_length=100, verbose_name="Title"
            ),
        ),
        migrations.AlterField(
            model_name="processtextitem",
            name="description",
            field=api.customs.CustomTextField(
                help_text="Help Text Placeholder",
                max_length=500,
                verbose_name="Description",
            ),
        ),
        migrations.AlterField(
            model_name="processtextitem",
            name="icon",
            field=api.customs.CustomCharField(
                help_text="Help Text Placeholder", max_length=40, verbose_name="Icon"
            ),
        ),
        migrations.AlterField(
            model_name="processtextitem",
            name="title",
            field=api.customs.CustomCharField(
                help_text="Help Text Placeholder", max_length=100, verbose_name="Title"
            ),
        ),
        migrations.AlterField(
            model_name="servicecomparerows",
            name="feature",
            field=api.customs.CustomCharField(
                help_text="Help Text Placeholder", max_length=40, verbose_name="Feature"
            ),
        ),
        migrations.AlterField(
            model_name="servicecomparerows",
            name="tier1_value",
            field=api.customs.CustomCharField(
                help_text="Help Text Placeholder", max_length=100, verbose_name="Tier 1"
            ),
        ),
        migrations.AlterField(
            model_name="servicecomparerows",
            name="tier2_value",
            field=api.customs.CustomCharField(
                help_text="Help Text Placeholder", max_length=100, verbose_name="Tier 2"
            ),
        ),
        migrations.AlterField(
            model_name="servicecomparerows",
            name="tier3_value",
            field=api.customs.CustomCharField(
                help_text="Help Text Placeholder", max_length=100, verbose_name="Tier 3"
            ),
        ),
        migrations.CreateModel(
            name="ServiceTable",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "labels",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="service_table",
                        to="services.servicetablelabels",
                        verbose_name="Table Labels",
                    ),
                ),
                (
                    "rows",
                    models.ManyToManyField(
                        related_name="service_tables",
                        to="services.servicecomparerows",
                        verbose_name="Table Rows",
                    ),
                ),
            ],
            options={
                "verbose_name": "Service Table",
                "verbose_name_plural": "Service Tables",
            },
        ),
    ]
